@page "/contact"
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Components.Forms
@using HealWell.Models
<Header></Header>
<div style="background-color: #FAFAFA">
<section class="contact-hero">
    <div class="container">
        <h1 class="wow fadeInUp">Contact Us</h1>
        <p class="wow fadeInUp" data-wow-delay="0.2s">We're here to help and answer any questions you may have</p>
    </div>
</section>

<section class="contact-section" >
    <div class="container">
        <div class="row">
            <div class="col-lg-6 wow fadeInUp">
                <div class="contact-info">
                    <h2>Get in Touch</h2>
                    <p>Have questions about our services or need to schedule an appointment? Reach out to us through any of these channels:</p>

                    <div class="contact-method">
                        <i class="fas fa-phone-alt"></i>
                        <div>
                            <h3>Phone</h3>
                            <p>+1 (800) 555-1234</p>
                            <small class="sm">24/7 Emergency Support Available</small>
                        </div>
                    </div>

                    <div class="contact-method">
                        <i class="fas fa-envelope"></i>
                        <div>
                            <h3>Email</h3>
                            <p>support@medicareplus.com</p>
                                <small class="sm">Response within 24 hours</small>
                        </div>
                    </div>

                    <div class="contact-method">
                        <i class="fas fa-map-marker-alt"></i>
                        <div>
                            <h3>Main Office</h3>
                            <p>123 Healthcare Ave, Boston, MA 02115</p>
                                <small class="sm">Open Mon-Fri: 8am-8pm</small>
                        </div>
                    </div>

                    <div class="social-links">
                            <a href="https://facebook.com/medicareplus" target="_blank"><i class="fab fa-facebook-f"></i></a>
                            <a href="https://twitter.com/medicareplus" target="_blank"><i class="fab fa-twitter"></i></a>
                            <a href="https://linkedin.com/company/medicareplus" target="_blank"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 wow fadeInUp" data-wow-delay="0.2s">
                <div class="contact-form">
                    <h2>Send Us a Message</h2>
                    <EditForm Model="contactForm" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <div class="form-group">
                            <label class="fo"for="name">Full Name*</label>
                            <InputText id="name" @bind-Value="contactForm.Name" class="form-control" />
                            <ValidationMessage For="@(() => contactForm.Name)" />
                        </div>

                        <div class="form-group">
                                <label class="fo" for="email">Email*</label>
                            <InputText id="email" @bind-Value="contactForm.Email" class="form-control" />
                            <ValidationMessage For="@(() => contactForm.Email)" />
                        </div>

                        <div class="form-group">
                                <label class="fo" for="phone">Phone</label>
                            <InputText id="phone" @bind-Value="contactForm.Phone" class="form-control" />
                        </div>

                        <div class="form-group">
                                <label class="fo" for="subject">Subject*</label>
                            <InputSelect id="subject" @bind-Value="contactForm.Subject" class="form-control">
                                <option value="">Select a subject</option>
                                <option value="General Inquiry">General Inquiry</option>
                                <option value="Appointment">Appointment</option>
                                <option value="Billing">Billing Question</option>
                                <option value="Technical Support">Technical Support</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => contactForm.Subject)" />
                        </div>

                        <div class="form-group">
                                <labelclass ="fo" for="message">Message*</labelclass>
                            <InputTextArea id="message" @bind-Value="contactForm.Message" class="form-control" rows="5" />
                            <ValidationMessage For="@(() => contactForm.Message)" />
                        </div>

                        <button type="submit" class="btn-submit" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span class="spinner-border spinner-border-sm" role="status"></span>
                            }
                            Send Message
                        </button>
                    </EditForm>

                    @if (showSuccessMessage)
                    {
                        <div class="alert alert-success mt-3">
                            Thank you! Your message has been sent successfully.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


</div>
<Footer></Footer>
@code {
    private ContactForm contactForm = new();
    private bool isSubmitting = false;
    private bool showSuccessMessage = false;

    private async Task HandleSubmit()
    {
        isSubmitting = true;

        // Simulate form submission (replace with actual API call)
        await Task.Delay(1500);

        showSuccessMessage = true;
        contactForm = new();
        isSubmitting = false;

        // Scroll to success message
        await JSRuntime.InvokeVoidAsync("scrollToElement", "alert-success");
    }

    // public class ContactForm
    // {
    //     [Required(ErrorMessage = "Name is required")]
    //     public string Name { get; set; }

    //    [Required(ErrorMessage = "Email is required")]
    //     [EmailAddress(ErrorMessage = "Invalid email address")]
    //     public string Email { get; set; }

    //     public string Phone { get; set; }

    //    [Required(ErrorMessage = "Subject is required")]
    //     public string Subject { get; set; }

    //    [Required(ErrorMessage = "Message is required")]
    //    [MinLength(10, ErrorMessage = "Message must be at least 10 characters")]
    //     public string Message { get; set; }
    // }
}